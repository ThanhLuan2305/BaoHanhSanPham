/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import static Database.ConnectCassandra.createSession;
import Database.Service.WarrantyClaimService;
import Model.WarrantyClaim;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import com.datastax.oss.driver.api.core.CqlSession;
import java.time.format.DateTimeParseException;
import java.util.HashSet;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nganh
 */
public class pnlWarrantyClaim extends javax.swing.JPanel {

    /**
     * Creates new form PnlWarrantyClaimm
     */
    private WarrantyClaimService warrantyClaimService;
    CqlSession cqlSession = createSession();

    public pnlWarrantyClaim() {
        initComponents();
        warrantyClaimService = new WarrantyClaimService(cqlSession);
        loadAllClaims();
        loadStatusIntoComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        txtMaSP = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMoTa = new javax.swing.JTextArea();
        txtNgay = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableDSBH = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        CbbStatus = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtMaBH = new javax.swing.JTextField();

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Danh sách bảo hành");

        jLabel2.setText("Mã khách hàng:");

        jLabel3.setText("Mã sản phẩm:");

        jLabel4.setText("Ngày yêu cầu:");

        jLabel5.setText("Mô tả vấn đề:");

        txtMoTa.setColumns(20);
        txtMoTa.setRows(5);
        jScrollPane1.setViewportView(txtMoTa);

        TableDSBH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableDSBH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableDSBHMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TableDSBH);

        btnThem.setText("Thêm yêu cầu");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Cập nhật yêu cầu");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa yêu cầu");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel6.setText("Trạng thái:");

        CbbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CbbStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbbStatusActionPerformed(evt);
            }
        });

        jLabel7.setText("Mã bảo hành:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(168, 168, 168))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMaSP)
                            .addComponent(txtMaKH)
                            .addComponent(txtNgay)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                            .addComponent(CbbStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtMaBH)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnThem)
                        .addGap(81, 81, 81)
                        .addComponent(btnSua)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnXoa)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtMaBH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CbbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnThem)
                            .addComponent(btnSua)
                            .addComponent(btnXoa))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TableDSBHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableDSBHMouseClicked
        tableRowClicked(evt);
    }//GEN-LAST:event_TableDSBHMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        addClaim();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        updateClaim();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        deleteClaim();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void CbbStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbbStatusActionPerformed
        filterTableByStatus();
    }//GEN-LAST:event_CbbStatusActionPerformed

    private void addClaim() {
        try {
            String claimId = txtMaBH.getText();
            String customerId = txtMaKH.getText();
            String productId = txtMaSP.getText();
            LocalDate claimDate = LocalDate.now();
            String issueDescription = txtMoTa.getText();
            String claimStatus = (String) CbbStatus.getSelectedItem();

            WarrantyClaim newClaim = new WarrantyClaim(claimId, customerId, productId, claimDate, issueDescription, claimStatus);
            warrantyClaimService.submitWarrantyClaim(newClaim);

            loadAllClaims();
            clearForm();
            JOptionPane.showMessageDialog(this, "Yêu cầu bảo hành đã được nộp thành công!");
        } catch (DateTimeParseException dtpe) {
            JOptionPane.showMessageDialog(this, "Lỗi phân tích ngày: " + dtpe.getMessage());
            dtpe.printStackTrace(); 
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi nộp yêu cầu bảo hành: " + ex.getMessage());
        }
    }
    private void updateClaim() {
        try {
            String claimId = txtMaBH.getText();
            String customerId = txtMaKH.getText();
            String productId = txtMaSP.getText();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("uuuu-MM-dd").withLocale(Locale.ENGLISH);
            LocalDate claimDate = LocalDate.parse(txtNgay.getText().trim(), formatter);
            String issueDescription = txtMoTa.getText();
            String claimStatus = (String) CbbStatus.getSelectedItem();

            WarrantyClaim updatedClaim = new WarrantyClaim(claimId, customerId, productId, claimDate, issueDescription, claimStatus);
            warrantyClaimService.updateWarrantyClaim(updatedClaim);

            loadAllClaims();
            clearForm();
            JOptionPane.showMessageDialog(this, "Cập nhật yêu cầu bảo hành thành công!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi cập nhật yêu cầu bảo hành: " + ex.getMessage());
        }
    }
    private void deleteClaim() {
        try {
            String claimId = txtMaBH.getText();

            int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa yêu cầu này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                warrantyClaimService.deleteWarrantyClaim(claimId);
                loadAllClaims();
                clearForm();
                JOptionPane.showMessageDialog(this, "Yêu cầu bảo hành đã được xóa thành công!");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi xóa yêu cầu bảo hành: " + ex.getMessage());
        }
    }
    private void loadStatusIntoComboBox() {
        List<WarrantyClaim> sta = warrantyClaimService.getAllWarrantyClaims();
        CbbStatus.removeAllItems();
        CbbStatus.addItem("Tất cả");

        Set<String> claimStatusSet = new HashSet<>();
        for (WarrantyClaim claim : sta) {
            claimStatusSet.add(claim.getClaimStatus());
        }

        for (String status : claimStatusSet) {
            CbbStatus.addItem(status);
        }
    }
    private void filterTableByStatus() {
        String selectedStatus = (String) CbbStatus.getSelectedItem();
        if (selectedStatus == null) {
            return;
        }

        List<WarrantyClaim> allClaims = warrantyClaimService.getAllWarrantyClaims();
        DefaultTableModel model = (DefaultTableModel) TableDSBH.getModel();
        model.setRowCount(0);

        if (selectedStatus.equals("Tất cả")) {
            for (WarrantyClaim claim : allClaims) {
                model.addRow(new Object[]{
                    claim.getClaimId(),
                    claim.getClaimDate(),
                    claim.getClaimStatus(),
                    claim.getCustomerId(),
                    claim.getIssueDescription(),
                    claim.getProductId()
                });
            }
        } else {
            for (WarrantyClaim claim : allClaims) {
                if (claim.getClaimStatus().equals(selectedStatus)) {
                    model.addRow(new Object[]{
                        claim.getClaimId(),
                        claim.getClaimDate(),
                        claim.getClaimStatus(),
                        claim.getCustomerId(),
                        claim.getIssueDescription(),
                        claim.getProductId()
                    });
                }
            }
        }
    }
    public void loadAllClaims() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Mã Bảo Hành");
        model.addColumn("Ngày Yêu Cầu");
        model.addColumn("Trạng Thái");
        model.addColumn("Mã Khách Hàng");
        model.addColumn("Mô Tả Vấn Đề");
        model.addColumn("Mã Sản Phẩm");

        List<WarrantyClaim> claims = warrantyClaimService.getAllWarrantyClaims();

        for (WarrantyClaim claim : claims) {
            model.addRow(new Object[]{
                claim.getClaimId(),
                claim.getProductId(),
                claim.getClaimDate(),
                claim.getClaimStatus(),
                claim.getCustomerId(),
                claim.getIssueDescription()
            });
        }

        TableDSBH.setModel(model);
    }

    private void clearForm() {
        txtMaBH.setText("");
        txtMaKH.setText("");
        txtMaSP.setText("");
        txtNgay.setText("");
        txtMoTa.setText("");
        CbbStatus.setSelectedIndex(0);
    }

    private void tableRowClicked(java.awt.event.MouseEvent evt) {
        int selectedRow = TableDSBH.getSelectedRow();

        if (selectedRow != -1) {
            String claimId = TableDSBH.getValueAt(selectedRow, 0).toString();
            String claimDate = TableDSBH.getValueAt(selectedRow, 1).toString();
            String claimStatus = TableDSBH.getValueAt(selectedRow, 2).toString();
            String customerId = TableDSBH.getValueAt(selectedRow, 3).toString();
            String issueDescription = TableDSBH.getValueAt(selectedRow, 4).toString();
            String productId = TableDSBH.getValueAt(selectedRow, 5).toString();

            txtMaBH.setText(claimId);
            txtMaKH.setText(customerId);
            txtMaSP.setText(productId);
            txtNgay.setText(claimDate);
            CbbStatus.setSelectedItem(claimStatus);
            txtMoTa.setText(issueDescription);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CbbStatus;
    private javax.swing.JTable TableDSBH;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtMaBH;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextArea txtMoTa;
    private javax.swing.JTextField txtNgay;
    // End of variables declaration//GEN-END:variables
}
